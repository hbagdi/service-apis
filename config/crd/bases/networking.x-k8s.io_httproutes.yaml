
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: httproutes.networking.x-k8s.io
spec:
  group: networking.x-k8s.io
  names:
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HTTPRoute is the Schema for the httproutes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HTTPRouteSpec defines the desired state of HTTPRoute
            properties:
              hosts:
                description: Hosts is a list of Host definitions.
                items:
                  description: HTTPRouteHost is the configuration for a given set of hosts.
                  properties:
                    extensionRef:
                      description: "ExtensionRef is an optional, implementation-specific extension to the \"host\" block.  The resource may be \"configmaps\" (omit or specify the empty string for the group) or an implementation-defined resource (for example, resource \"myroutehosts\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: custom"
                      properties:
                        group:
                          default: core
                          description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                          type: string
                        name:
                          description: Name is the name of the referent.
                          type: string
                        resource:
                          default: configmaps
                          description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                          type: string
                      required:
                      - name
                      type: object
                    hostnames:
                      description: "Hostnames defines a set of hostname that should match against the HTTP Host header to select a HTTPRoute to process the request. Hostname is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: \n 1. IPs are not allowed. 2. The `:` delimiter is not respected because ports are not allowed. \n Incoming requests are matched against the hostnames before the HTTPRoute rules. If no hostname is specified, traffic is routed based on the HTTPRouteRules. \n Hostname can be \"precise\" which is a domain name without the terminating dot of a network host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain name prefixed with a single wildcard label (e.g. \"*.example.com\"). The wildcard character '*' must appear by itself as the first DNS label and matches only a single label. You cannot have a wildcard label by itself (e.g. Host == \"*\"). Requests will be matched against the Host field in the following order: 1. If Host is precise, the request matches this rule if    the http host header is equal to Host. 2. If Host is a wildcard, then the request matches this rule if    the http host header is to equal to the suffix    (removing the first label) of the wildcard rule. \n Support: Core"
                      items:
                        type: string
                      type: array
                    rules:
                      description: Rules are a list of HTTP matchers, filters and actions.
                      items:
                        description: HTTPRouteRule defines semantics for matching an incoming HTTP request against a set of matching rules and executing an action (and optionally filters) on the request.
                        properties:
                          action:
                            description: Action defines what happens to the request.
                            properties:
                              extensionRef:
                                description: "ExtensionRef is an optional, implementation-specific extension to the \"action\" behavior.  The resource may be \"configmaps\" (use the empty string for the group) or an implementation-defined resource (for example, resource \"myrouteactions\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: custom"
                                properties:
                                  group:
                                    default: core
                                    description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    type: string
                                  resource:
                                    default: configmaps
                                    description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                    type: string
                                required:
                                - name
                                type: object
                              forwardTo:
                                description: "ForwardTo sends requests to the referenced object(s).  The resource may be \"services\" (omit or use the empty string for the group), or an implementation may support other resources (for example, resource \"myroutetargets\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"services\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: core"
                                items:
                                  description: ForwardToTarget identifies a target object within a known namespace.
                                  properties:
                                    targetPort:
                                      description: "TargetPort specifies the destination port number to use for the TargetRef. If unspecified and TargetRef is a Service object consisting of a single port definition, that port will be used. If unspecified and TargetRef is a Service object consisting of multiple port definitions, an error is surfaced in status. \n Support: Core"
                                      format: int32
                                      type: integer
                                    targetRef:
                                      description: "TargetRef is an object reference to forward matched requests to. The resource may be \"services\" (omit or use the empty string for the group), or an implementation may support other resources (for example, resource \"myroutetargets\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"services\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: Core (Kubernetes Services) Support: Implementation-specific (Other resource types)"
                                      properties:
                                        group:
                                          default: core
                                          description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a service: \n fooRef:   resource: services   name: myservice \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          type: string
                                        resource:
                                          default: services
                                          description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the services resource. For example, use the following to specify a services resource: \n fooRef:   name: myservice \n Otherwise, if the services resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    weight:
                                      default: 1
                                      description: "Weight specifies the proportion of traffic forwarded to a targetRef, computed as weight/(sum of all weights in targetRefs). Weight is not a percentage and the sum of weights does not need to equal 100. The following example (in yaml) sends 70% of traffic to service \"my-trafficsplit-sv1\" and 30% of the traffic to service \"my-trafficsplit-sv2\": \n   forwardTo:     - targetRef:         name: my-trafficsplit-sv1         weight: 70     - targetRef:         name: my-trafficsplit-sv2         weight: 30 \n If only one targetRef is specified, 100% of the traffic is forwarded to the targetRef. If unspecified, weight defaults to 1. \n Support: Core (httproute) Support: Extended (tcproute)"
                                      format: int32
                                      type: integer
                                  required:
                                  - targetRef
                                  type: object
                                minItems: 1
                                type: array
                            required:
                            - forwardTo
                            type: object
                          filter:
                            description: Filter defines what filters are applied to the request.
                            properties:
                              extensionRef:
                                description: "ExtensionRef is an optional, implementation-specific extension to the \"filter\" behavior.  The resource may be \"configmap\" (use the empty string for the group) or an implementation-defined resource (for example, resource \"myroutefilters\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: custom"
                                properties:
                                  group:
                                    default: core
                                    description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    type: string
                                  resource:
                                    default: configmaps
                                    description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                    type: string
                                required:
                                - name
                                type: object
                              headers:
                                description: "Headers related filters. \n Support: extended"
                                properties:
                                  add:
                                    additionalProperties:
                                      type: string
                                    description: "Add adds the given header (name, value) to the request before the action. \n Input:   GET /foo HTTP/1.1 \n Config:   add: {\"my-header\": \"foo\"} \n Output:   GET /foo HTTP/1.1   my-header: foo \n Support: extended?"
                                    type: object
                                  remove:
                                    description: "Remove the given header(s) from the HTTP request before the action. The value of RemoveHeader is a list of HTTP header names. Note that the header names are case-insensitive [RFC-2616 4.2]. \n Input:   GET /foo HTTP/1.1   My-Header1: ABC   My-Header2: DEF   My-Header2: GHI \n Config:   remove: [\"my-header1\", \"my-header3\"] \n Output:   GET /foo HTTP/1.1   My-Header2: DEF \n Support: extended?"
                                    items:
                                      type: string
                                    type: array
                                required:
                                - add
                                - remove
                                type: object
                            type: object
                          matches:
                            description: 'Matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if **any** one of the matches is satisfied. For example, take the following matches configuration: matches: - path: /foo   headers:     version: "2" - path: /v2/foo For a request to match against this rule, a request should satisfy EITHER of the two conditions: - path prefixed with `/foo` AND contains the header `version: "2"` - path prefix of `/v2/foo` Please see doc for HTTPRouteMatch on how to specify multiple match conditions that should be ANDed together.'
                            items:
                              description: 'HTTPRouteMatch defines the predicate used to match requests to a given action. Multiple match types are ANDed together, i.e. the match will evaluate to true only if all conditions are satisfied. For example:  match:    path: /foo    headers:      version: "1" will result in a match only if an HTTP request''s path starts with `/foo` AND contains the `version: "1"` header.'
                              properties:
                                extensionRef:
                                  description: "ExtensionRef is an optional, implementation-specific extension to the \"match\" behavior.  The resource may be \"configmap\" (use the empty string for the group) or an implementation-defined resource (for example, resource \"myroutematchers\" in group \"networking.acme.io\"). Omitting or specifying the empty string for both the resource and group indicates that the resource is \"configmaps\".  If the referent cannot be found, the \"InvalidRoutes\" status condition on any Gateway that includes the HTTPRoute will be true. \n Support: custom"
                                  properties:
                                    group:
                                      default: core
                                      description: "Group is the group of the referent.  Omitting the value or specifying the empty string indicates the core API group.  For example, use the following to specify a configmaps: \n fooRef:   resource: configmaps   name: myconfigmap \n Otherwise, if the core API group is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      type: string
                                    resource:
                                      default: configmaps
                                      description: "Resource is the API resource name of the referent. Omitting the value or specifying the empty string indicates the configmaps resource. For example, use the following to specify a configmaps resource: \n fooRef:   name: myconfigmap \n Otherwise, if the configmaps resource is not desired, specify the desired group: \n fooRef:   group: acme.io   resource: foos   name: myfoo"
                                      type: string
                                  required:
                                  - name
                                  type: object
                                headerMatchType:
                                  default: Exact
                                  description: "HeaderMatchType defines the semantics of the `Header` matcher. \n Support: core (Exact) Support: custom (ImplementationSpecific) \n Default: \"Exact\""
                                  enum:
                                  - Exact
                                  - ImplementationSpecific
                                  type: string
                                headers:
                                  additionalProperties:
                                    type: string
                                  description: Headers are the HTTP Headers to match as interpreted via HeaderMatchType. Multiple headers are ANDed together, meaning, a request must contain all the headers specified in order to select this route.
                                  type: object
                                path:
                                  description: "Path is the value of the HTTP path as interpreted via PathType. \n Default: \"/\""
                                  type: string
                                pathMatchType:
                                  default: Prefix
                                  description: "PathType defines the semantics of the `Path` matcher. \n Support: core (Exact, Prefix) Support: custom (RegularExpression, ImplementationSpecific) \n Since RegularExpression PathType has custom conformance, implementations can support POSIX, PCRE or any other dialects of regular expressions. Please read the implementation's documentation to determine the supported dialect. \n Default: \"Prefix\""
                                  enum:
                                  - Exact
                                  - Prefix
                                  - RegularExpression
                                  - ImplementationSpecific
                                  type: string
                              required:
                              - path
                              type: object
                            type: array
                        required:
                        - action
                        type: object
                      minItems: 1
                      type: array
                  required:
                  - rules
                  type: object
                type: array
            type: object
          status:
            description: HTTPRouteStatus defines the observed state of HTTPRoute.
            properties:
              gatewayRefs:
                items:
                  description: GatewayObjectReference identifies a Gateway object.
                  properties:
                    name:
                      description: Name is the name of the referent.
                      type: string
                    namespace:
                      description: Namespace is the namespace of the referent.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - gatewayRefs
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
